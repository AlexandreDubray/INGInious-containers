#! /bin/bash

mkdir /workdir
mkdir /workdir/course
mkdir /workdir/submissions
tar -zxf /input/course.tgz -C /workdir/course > /dev/null 2> /dev/null
tar -zxf /input/submissions.tgz -C /workdir/submissions > /dev/null 2> /dev/null

# Verify that the task exists
taskid=$(cat /input/task.txt)
if [ ! -e "/workdir/course/$taskid" ]
then
    >&2 echo "Task id $taskid not found in course"
    exit 1
fi
if [ ! -e "/workdir/submissions/$taskid" ]
then
    >&2 echo "Task id $taskid not found in submissions"
    exit 1
fi

# Copy the submissions to a proper location
mkdir /todo
for userdir in `find /workdir/submissions/$taskid/ -mindepth 1 -maxdepth 1 -type d`
do 
    username=${userdir#"/workdir/submissions/$taskid/"}
    mkdir "/todo/current-$username/"
    cp -R /workdir/submissions/$taskid/$username/*/archive/* /todo/current-$username/
    # drop __feedback.json, not needed here
    rm -f /todo/current-$username/__feedback.json > /dev/null 2> /dev/null
done

# Extract the archives
find /todo -iname \*.zip | sed -e 's/^\(.*\)\(\.zip\)$/"\1.zip" -d "\1_extract"/' | xargs -n 3 unzip

# Parse the language
lang="java17"
if [ -e "/workdir/course/$taskid/jplag_lang.txt" ]
then
    lang=$(cat "/workdir/course/$taskid/jplag_lang.txt")
fi
if [ -s "/input/lang.txt" ]
then
    lang=$(cat "/input/lang.txt")
fi

# Parse the basic arguments
jplag_args="-s -l $lang"
if [ -e "/workdir/course/$taskid/jplag_basecode" ]
then
    jplag_args="$jplag_args -bc /workdir/course/$taskid/jlang_basecode"
fi

# Add the exclude file if it exists
if [ -e "/workdir/course/$taskid/jplag_exclude.txt" ]
then
    jplag_args="$jplag_args -x /workdir/course/$taskid/jplag_exclude.txt"
fi

# If there are additionnal arguments, add them
if [ -s "/input/args.txt" ]
then
    add_arg=$(cat /input/args.txt)
    jplag_args="$jplag_args $add_arg"
fi

# Verify the presence of old_submissions
if [ -s "/input/old_submissions.tgz" ]
then
    # It exists, untar it
    mkdir /workdir/old_submissions
    tar -zxf /input/old_submissions.tgz -C /workdir/old_submissions > /dev/null 2> /dev/null
    if [ $? -ne 0 ]; then
        >&2 echo "Unable to untar the old submission archive"
        exit 1
    fi

    # Check the format of the archive
    if [ -e "/workdir/old_submissions/$taskid" ] #INGInious format
    then
        for userdir in `find /workdir/old_submissions/$taskid/ -mindepth 1 -maxdepth 1 -type d`
        do
            username=${userdir#"/workdir/old_submissions/$taskid/"}
            mkdir "/todo/old-$username/"
            cp -R /workdir/old_submissions/$taskid/$username/*/archive/* /todo/old-$username/
            # drop __feedback.json, not needed here
            rm -f /todo/old-$username/__feedback.json > /dev/null 2> /dev/null
        done
    else #compat format
        for userdir in `find /workdir/old_submissions -mindepth 2 -maxdepth 2 -type d`
        do
            username=${userdir##/workdir/old_submissions/[^/]*/}
            mkdir "/todo/old-$username/"
            cp -R $userdir/* /todo/old-$username/
            # drop __feedback.json, not needed here
            rm -f /todo/old-$username/__feedback.json > /dev/null 2> /dev/null
        done
    fi
fi

jplag_args="$jplag_args -r /output /todo"
java -jar /jplag.jar $jplag_args > /output/jplag_stdout.txt 2> /output/jplag_stderr.txt
